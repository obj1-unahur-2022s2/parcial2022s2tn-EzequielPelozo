/*
 * Ahora falla un test porque no se pudo agregar
 */
import parcelas.*
import plantas.*

describe "Test de Parcelas" {
	
	const parcela1 = new ParcelaEcologica(ancho=20, largo=1, horasDeSolQueRecibe=8)
	const parcela2 = new ParcelaEcologica(ancho=20, largo=1, horasDeSolQueRecibe=5)
	const soja1 = new Soja(altura= 1.5, anioObtencionSemilla=2009)
	const soja2 = new Soja(altura= 1.5, anioObtencionSemilla=2009)
	const soja3 = new Soja(altura= 1.5, anioObtencionSemilla=2009)
	const soja4 = new Soja(altura= 1.5, anioObtencionSemilla=2009)
	const soja5 = new Soja(altura= 1.5, anioObtencionSemilla=2009)
	
	//para ver menos de un metro y medio
	const soja6 = new Soja(altura= 1.4, anioObtencionSemilla=2009)
	const soja7 = new Soja(altura= 1.4, anioObtencionSemilla=2009)
	const soja8 = new Soja(altura= 1.4, anioObtencionSemilla=2009)
	
	const soja11 = new Soja(altura= 0.6, anioObtencionSemilla=2009)
	const parcela3 = new ParcelaEcologica(ancho=20, largo=1, horasDeSolQueRecibe=7)
	
	
	
	test "Una parcela de 20 mts. de ancho por 1 mt. de largo que recibe 8 horas de sol por día, 
			tiene una superficie de 20 m2 y la cantidad máxima de plantas que tolera es de " {		
				
				assert.equals(4, parcela1.cantidadMaximaDePlantas())
			}
			
	test "plantar1 puede agregar" {		
				parcela1.plantar(soja1)
				parcela1.plantar(soja2)
				parcela1.plantar(soja3)
				parcela1.plantar(soja4)
				assert.equals(4, parcela1.cantidadMaximaDePlantas())
			}
			
	test "plantar2 no se puede agrgar" {		
				parcela1.plantar(soja1)
				parcela1.plantar(soja2)
				parcela1.plantar(soja3)
				parcela1.plantar(soja4)
				assert.throwsExceptionWithMessage("No se puede plantar una planta",{ 
				parcela1.plantar(soja5)				
				})	
			}
			
	test "plantar3 mucho sol" {		
				assert.throwsExceptionWithMessage("No se puede plantar una planta",{ 
				parcela2.plantar(soja5)				
				})	
			}
			
	test "menos de un metro y medio" {		
				parcela1.plantar(soja6)
				parcela1.plantar(soja7)
				parcela1.plantar(soja8)
				assert.that(parcela1.noHayPLantasMayorUnMetroYMedio())			
					
			}	
	test "una mayor de un metro y medio" {		
				parcela1.plantar(soja1)
				parcela1.plantar(soja7)
				parcela1.plantar(soja8)
				assert.notThat(parcela1.noHayPLantasMayorUnMetroYMedio())			
					
			}
			
	test "se asocia bien" {		
				assert.that(parcela3.seAsociaBienCon(soja11))			
					
			}
	
	test "inta" {
		parcela1.plantar(soja1)
		parcela1.plantar(soja2)
		inta.agregarParcelas(parcela1)
		inta.agregarParcelas(parcela2)
		
		assert.equals(2, inta.sumaDePlantasPorParcela())
	}													
}

